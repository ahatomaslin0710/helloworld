name: IOS Production Build
on:
  push:
    branches:
      - main
# on:
#   workflow_dispatch:
#   release:
#     types: [published] # only run the workflow when a new release has been published
jobs:
  ios-build:
    name: IOS Production Build
    runs-on: macOS-latest
    defaults:
      run:
        working-directory: ios
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000
      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        run: pod install --repo-update
      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ios/helloworld.xcodeproj
          p12-base64: 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
          mobileprovision-base64: 
          code-signing-identity: 'iPhone Distribution'
          team-id: W6K7F9HNX5
          certificate-password: xup6jo3fup6
          workspace-path: ios/helloworld.xcworkspace
          scheme: helloworld
      - name: Upload Artifact to Testflight
        run: xcrun altool --upload-app --type ios --file ../output.ipa --username horsekit1982@gmail.com --password lxzl-guyp-pqub-ojpv
        env:
          APPLE_USER_NAME: ${{secrets.YOUR_APPLE_ACCOUNT_ID}}
          APPLE_APP_SPECIFIC_PASSWORD: ${{secrets.YOUR_APP_SPECIFIC_PASSWORD}}
      # - name: 'Upload app to TestFlight'
      #   uses: apple-actions/upload-testflight-build@v1
      #   with:
      #     app-path: './ios/output.ipa'
      #     issuer-id: 752ab3fd-495c-4d6c-baaa-5aa8d32b4f47
      #     api-key-id: 4NWUL9Y66J
      #     api-private-key: ./AuthKey_4NWUL9Y66J.p8
